import type { NextPage } from 'next'
import * as React from 'react';
import Head from 'next/head'
import Header from '../components/Header'
import HomePage from '../components/HomePage/index';
import FooterCustom from '../components/Footer/index';
import { Grid, Box } from '@mui/material';
import ListOrder from '../components/Detail/ListOrder';
import TextField from '@mui/material/TextField';
import Button from '@mui/material/Button';
import CircularProgress from '@mui/material/CircularProgress';
import FacebookIcon from '@mui/icons-material/Facebook';
import ContactPhoneIcon from '@mui/icons-material/ContactPhone';
import IconButton from '@mui/material/IconButton';

const Home: NextPage = () => {
  const [name, setName] = React.useState("");
  const [phone, setPhone] = React.useState("");
  const [description, setDescription] = React.useState("");
  const [isLoading, setIsLoading] = React.useState(false);

  const handleSendOrder = () => {
    if (name.length === 0 && phone.length === 0) {
      alert("Vui l√≤ng nh·∫≠p ƒë·∫©y ƒë·ªß th√¥ng tin h·ªç t√™n v√† s·ªë ƒëi·ªán tho·∫°i!!!")
      return;
    }

    setIsLoading(true)
    const data = JSON.stringify({
      order: {
        link: window.location.href,
        name: name,
        phone: phone,
        product: "GI·∫§Y D√ÅN T∆Ø·ªúNG H√ÄN QU·ªêC",
        description: description,
        status: 'chua_lien_he'
      }
    })

    fetch("https://admin.hainn.dev/orders", {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: data
    }).then(ress => ress.json())
      .then(res => {
        setIsLoading(false);
        alert("Th√™m th√¥ng tin th√†nh c√¥ng, ch√∫ng t√¥i s·∫Ω li√™n h·ªá b·∫°n trong th·ªùi gian s·ªõm nh·∫•t.")
      }).catch(err => console.log(err))
  }

  const [groups, setGroups] = React.useState([])

  const fetchGroups = () => {
    fetch("https://admin.hainn.dev/groups", {
      method: 'GET'
    }).then(ress => ress.json())
      .then(res => {
        setGroups(res)
      })
      .catch(err => {
        console.log(err)
      })
  }

  React.useEffect(() => {
    fetchGroups()
  }, [])

  return (
    <div>
      <Head>
        <title>Gi·∫•y d√°n t∆∞·ªùng H√†n Qu·ªëc</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <Header />
        <Grid sx={{ marginTop: '30px', padding: '0 16px' }} container spacing={2}>
          <Grid xs={12} item>
            <ul className="social-icon">
              <li className="social-icon__item">
                <Button onClick={() => {
                  window.open('https://www.facebook.com/profile.php?id=100005944332960', '_blank');
                }} sx={{ marginBottom: '32px' }} variant="outlined" startIcon={<FacebookIcon />}>
                  Facebook
                </Button>
              </li>
              <li className="social-icon__item">
                <Button onClick={() => {
                  window.location.href = 'tel:0961576312'
                }} sx={{ marginBottom: '32px' }} variant="outlined" startIcon={<ContactPhoneIcon />}>
                  0961576312
                </Button>
              </li>
              <li className="social-icon__item">
                <Button onClick={() => {
                  window.open('https://zalo.me/0961576312', '_blank');
                }} sx={{ color: 'white', marginBottom: '32px' }} variant="contained" startIcon={<div>Zalo: </div>}>
                  Li√™n h·ªá v·ªõi t√¥i
                </Button>
              </li>
            </ul>
          </Grid>
          <Grid item lg={6} md={6} sm={12} xs={12}>
            <Box component="h2" sx={{ margin: 0 }}>
              GI·∫§Y D√ÅN T∆Ø·ªúNG H√ÄN QU·ªêC
            </Box>
            <Box>
              <ListOrder />
            </Box>
          </Grid>
          <Grid item lg={6} md={6} sm={12} xs={12}>
            <Box component="h2" sx={{ margin: 0, marginBottom: '16px' }}>
              TH√îNG TIN LI√äN H·ªÜ
            </Box>
            <Box component="p" sx={{ margin: 0, marginBottom: '16px' }}>
              Vui l√≤ng cho ch√∫ng t√¥i bi·∫øt th√¥ng tin c·ªßa b·∫°n, ch√∫ng t√¥i s·∫Ω li√™n h·ªá b·∫°n trong th·ªùi gian s·ªõm nh·∫•t c√≥ th·ªÉ.
            </Box>
            <Grid container spacing={2}>
              <Grid item lg={6} md={6} sm={12} xs={12}>
                <TextField
                  autoFocus
                  value={name}
                  margin="dense"
                  id="name"
                  label="H·ªç v√† t√™n üèï"
                  type="text"
                  fullWidth
                  variant="outlined"
                  onChange={(e: any) => setName(e.target.value)}
                />
              </Grid>
              <Grid item lg={6} md={6} sm={12} xs={12}>
                <TextField
                  value={phone}
                  margin="dense"
                  id="phone"
                  label="S·ªë ƒëi·ªán tho·∫°i üìû"
                  type="number"
                  fullWidth
                  variant="outlined"
                  onChange={(e: any) => setPhone(e.target.value)}
                />
              </Grid>
              <Grid item lg={12} md={12} sm={12} xs={12}>
                <TextField
                  id="outlined-multiline-static"
                  label="ƒê·ªÉ l·∫°i l·ªùi nh·∫Øn cho ch√∫ng t√¥i üòç"
                  fullWidth
                  multiline
                  rows={5}
                  variant="outlined"
                  value={description}
                  onChange={(e: any) => setDescription(e.target.value)}
                />
              </Grid>
              <Grid item lg={12} md={12} sm={12} xs={12}>
                <Button
                  onClick={handleSendOrder}
                  disabled={isLoading}
                  variant="contained"
                  fullWidth
                >
                  {
                    isLoading ? (<CircularProgress />) : "G·ª≠i th√¥ng tin"
                  }
                </Button>
              </Grid>
            </Grid>
          </Grid>
        </Grid>
        <HomePage group={groups[0]} />
        <FooterCustom />
      </main>
    </div >
  )
}

export default Home
